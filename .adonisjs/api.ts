// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type ProductsGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/product_controller.ts').default['index'], false>
}
type ProductsIdGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/product_controller.ts').default['show'], false>
}
type CartGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/cart_controller.ts').default['index'], false>
}
type CartPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/cart_controller.ts').default['store'], false>
}
type CartIdPut = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/cart_controller.ts').default['update'], false>
}
type CartIdDelete = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/cart_controller.ts').default['destroy'], false>
}
type CartDelete = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/cart_controller.ts').default['clear'], false>
}
type CheckoutGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/checkout_controller.ts').default['index'], false>
}
type CheckoutAddressPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/checkout_controller.ts').default['updateAddress'], false>
}
type CheckoutProcessPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/checkout_controller.ts').default['processOrder'], false>
}
type CheckoutConfirmationIdGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/checkout_controller.ts').default['confirmation'], false>
}
type LoginGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/Auth/session_controller.ts').default['showLogin'], false>
}
type LoginPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/Auth/login.ts')['loginValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/Auth/session_controller.ts').default['login'], true>
}
type RegisterGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/Auth/session_controller.ts').default['showRegister'], false>
}
type RegisterPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/Auth/register.ts')['registerValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/Auth/session_controller.ts').default['register'], true>
}
type LogoutGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/Auth/session_controller.ts').default['logout'], false>
}
export interface ApiDefinition {
  'products': {
    '$url': {
    };
    '$get': ProductsGetHead;
    '$head': ProductsGetHead;
    ':id': {
      '$url': {
      };
      '$get': ProductsIdGetHead;
      '$head': ProductsIdGetHead;
    };
  };
  'cart': {
    '$url': {
    };
    '$get': CartGetHead;
    '$head': CartGetHead;
    '$post': CartPost;
    ':id': {
      '$url': {
      };
      '$put': CartIdPut;
      '$delete': CartIdDelete;
    };
    '$delete': CartDelete;
  };
  'checkout': {
    '$url': {
    };
    '$get': CheckoutGetHead;
    '$head': CheckoutGetHead;
    'address': {
      '$url': {
      };
      '$post': CheckoutAddressPost;
    };
    'process': {
      '$url': {
      };
      '$post': CheckoutProcessPost;
    };
    'confirmation': {
      ':id': {
        '$url': {
        };
        '$get': CheckoutConfirmationIdGetHead;
        '$head': CheckoutConfirmationIdGetHead;
      };
    };
  };
  'login': {
    '$url': {
    };
    '$get': LoginGetHead;
    '$head': LoginGetHead;
    '$post': LoginPost;
  };
  'register': {
    '$url': {
    };
    '$get': RegisterGetHead;
    '$head': RegisterGetHead;
    '$post': RegisterPost;
  };
  'logout': {
    '$url': {
    };
    '$get': LogoutGetHead;
    '$head': LogoutGetHead;
  };
}
const routes = [
  {
    params: [],
    name: 'home',
    path: '/',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
  {
    params: [],
    name: 'products.index',
    path: '/products',
    method: ["GET","HEAD"],
    types: {} as ProductsGetHead,
  },
  {
    params: ["id"],
    name: 'products.show',
    path: '/products/:id',
    method: ["GET","HEAD"],
    types: {} as ProductsIdGetHead,
  },
  {
    params: [],
    name: 'cart.index',
    path: '/cart',
    method: ["GET","HEAD"],
    types: {} as CartGetHead,
  },
  {
    params: [],
    name: 'cart.store',
    path: '/cart',
    method: ["POST"],
    types: {} as CartPost,
  },
  {
    params: ["id"],
    name: 'cart.update',
    path: '/cart/:id',
    method: ["PUT"],
    types: {} as CartIdPut,
  },
  {
    params: ["id"],
    name: 'cart.destroy',
    path: '/cart/:id',
    method: ["DELETE"],
    types: {} as CartIdDelete,
  },
  {
    params: [],
    name: 'cart.clear',
    path: '/cart',
    method: ["DELETE"],
    types: {} as CartDelete,
  },
  {
    params: [],
    name: 'checkout.index',
    path: '/checkout',
    method: ["GET","HEAD"],
    types: {} as CheckoutGetHead,
  },
  {
    params: [],
    name: 'checkout.updateAddress',
    path: '/checkout/address',
    method: ["POST"],
    types: {} as CheckoutAddressPost,
  },
  {
    params: [],
    name: 'checkout.process',
    path: '/checkout/process',
    method: ["POST"],
    types: {} as CheckoutProcessPost,
  },
  {
    params: ["id"],
    name: 'checkout.confirmation',
    path: '/checkout/confirmation/:id',
    method: ["GET","HEAD"],
    types: {} as CheckoutConfirmationIdGetHead,
  },
  {
    params: [],
    name: 'auth.login',
    path: '/login',
    method: ["GET","HEAD"],
    types: {} as LoginGetHead,
  },
  {
    params: [],
    name: 'auth.login.store',
    path: '/login',
    method: ["POST"],
    types: {} as LoginPost,
  },
  {
    params: [],
    name: 'auth.register',
    path: '/register',
    method: ["GET","HEAD"],
    types: {} as RegisterGetHead,
  },
  {
    params: [],
    name: 'auth.register.store',
    path: '/register',
    method: ["POST"],
    types: {} as RegisterPost,
  },
  {
    params: [],
    name: 'auth.logout',
    path: '/logout',
    method: ["GET","HEAD"],
    types: {} as LogoutGetHead,
  },
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}
declare module '@tuyau/inertia/types' {
  type InertiaApi = typeof api
  export interface Api extends InertiaApi {}
}
